name: Dynamic Template

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: main
      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'
      - name: Install dependencies
        env:
          PHONENUMBER: ${{ secrets.PHONENUMBER }}
          PASSWORD: ${{ secrets.PASSWORD }}
        run: |
          python -m pip install --upgrade pip
          pip install pyxplora_api==1.0.24 -U
          python ./.github/actions/update_readme.py
      - name: "üíæ Github Repository Metadata"
        uses: varunsridharan/action-repository-meta@main
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
      - name: "üí´ Dynamic Template Render"
        uses: varunsridharan/action-dynamic-readme@main
        with:
          GLOBAL_TEMPLATE_REPOSITORY: Ludy87/yml_test
          files: |
            README.md
          confirm_and_push: false # Important if use "Require a pull request before merging" rule
        env:
          PHONENUMBER: ${{ secrets.PHONENUMBER }}
          PASSWORD: ${{ secrets.PASSWORD }}
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
      - uses: stefanzweifel/git-auto-commit-action@v4
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          file_pattern: README.md
          commit_message: üìù Update generated README
          branch: main
          commit_user_name: readme-scribe ü§ñ
          commit_user_email: actions@github.com
          commit_author: readme-scribe ü§ñ <actions@github.com>
      - name: Check Tag
        id: check-tag
        run: |
          if [[ "${{ github.event.head_commit.message }}" =~ ^[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              echo ::set-output name=match::true
          fi
      - name: Build
        if: steps.check-tag.outputs.match == 'true'
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.event.head_commit.message }}
          name: v${{ github.event.head_commit.message }}
          draft: false
          prerelease: false
          token: "${{ secrets.TOKEN }}"
      - name: Lint with flake8
        run: |
          pip install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics --ignore=E501,E266,E202,E201,E301
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=30 --max-line-length=127 --statistics --ignore=E501,E266,E202,E201,E301